@page "/playgame"
@inherits PlayGameBase
@attribute [Authorize]

@if (ErrorMessage != null)
{
    <DisplayError ErrorMessage="@ErrorMessage"></DisplayError>
}

<div class="parent-element d-flex justify-content-center align-items-center vh-60">
    <div class="child-element">
        <div class="sentence">
            
            @foreach (var c in E)
            {
                @*<p>@c.Type : @c.Value : @string.Join(";", c.Properties.Select(x => $"{x.Key} : {x.Value}"))</p>*@
                <p>@c.Type : @c.Value</p>
            }
            <br/>
            @E.First(c=>c.Type == "family_name").Value
            <br/>
            @Example.Meaning
            <br/>
            @{
                var counter = 0;

                @for (var j = 0; j < SentenceList.Count; j++)
                {
                    @SentenceList[j]

                    if (j < AnswerList.Count)
                    {
                        <text>&nbsp;</text>
                        @foreach (var i in Enumerable.Range(0, AnswerList[j].Length))
                        {
                            var local = counter + i;
                            <input type="text"
                                   style="@BorderColors[local]"
                                   class="xxx"
                                   maxlength="1"
                                   display="inline-block"
                                   max-width="1ch"
                                   @bind="EnteredLetters[local]"
                                   @ref="InputRefs[local]"
                                   @onkeydown="e => { HandleKeyDown(local, e); }"
                                   @oninput="e => { HandleInput(local, e); }"
                                   @onfocusin="() => HandleFocusIn(local)">
                        }
                        counter += AnswerList[j].Length;
                    }
                }
            }
        </div>

        <br/>
        <EditForm Model="EnteredLetters" OnValidSubmit="CheckAnswer">
            <div>
                <input type="hidden" @ref="@InvisibleInput">
            </div>
            <div class="text-center">
                <button class="button-85" role="button" type="submit">@CheckButtonTitle</button>
                <text>&nbsp;</text>
                <button class="button-85" role="button" type="button" @onclick="() => GoNextRound()">Next Round</button>
                <text>&nbsp;</text>
                <button class="button-85" role="button" type="button" @onclick="() => ShowVerbNextLetter()">Show verb's next letter</button>
                <text>&nbsp;</text>
                <button class="button-85" role="button" type="button" @onclick="() => ShowParticle()">Show particle</button>
            </div>
            <br/>
            <input type="checkbox" role="switch" checked="@isShowVerb"
                   name="noVerb" @onchange="@(() => isShowVerb = !isShowVerb)"/>
            <label>Don't guess verb</label>
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked="@isShowVerb">
                <label class="form-check-label" for="flexSwitchCheckChecked">Checked switch checkbox input</label>
            </div>
        </EditForm>
    </div>
</div>